name: Docker Compose Check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  docker-compose-test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_NAME: ${{ secrets.POSTGRES_NAME }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      MAIL_GUN_API_KEY: ${{ secrets.MAIL_GUN_API_KEY }}
      TENANT_DOMAIN: ${{ secrets.TENANT_DOMAIN }}
      DATABASE_ID_CONNECTION: ${{ secrets.DATABASE_ID_CONNECTION }}
      MANAGEMENT_API_TOKEN: ${{ secrets.MANAGEMENT_API_TOKEN }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ORGANIZATION_IDENTIFIER: ${{ secrets.ORGANIZATION_IDENTIFIER }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create external Docker networks
        run: |
          docker network create service_user_network || true
          
      - name: Write .env file from GitHub Secret
        run: |
          printf "%s" "${{ secrets.USERS_ENV_FILE }}" > docker/.env

      - name: Build and start containers
        working-directory: docker
        run: |  
          echo "Current working directory:"
          pwd
          docker-compose up -d --build

      - name: Wait for services to start
        run: |
          echo "Waiting for services to become healthy..."
          sleep 20
          docker logs docker_user-service
          
          docker ps -a

      - name: Check if API Gateway is running
        run: |
          curl --fail http://localhost:8002/organization || (echo "Users manager not responding" && exit 1)

      - name: Tear down containers and networks
        if: always()
        working-directory: docker
        run: |
          docker-compose down -v
          docker network rm service_user_network || true
